<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/websocket
    http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">

	<mvc:resources mapping="/resource/**" location="/resource/" />
	<mvc:resources mapping="/upload/fckeditor/**" location="/upload/fckeditor/" />
	<mvc:resources mapping="/upload/file/**" location="/upload/file/" />

	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="adminContextInterceptor" />
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="com.gwideal.common.web.BindingInitializer" />
		</property>
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<bean id="adminContextInterceptor" class="com.gwideal.common.web.AdminContextInterceptor">
		<property name="loginUrl" value="/login.do" />
		<property name="excludeUrls">
			<list>
				<value>/login.do</value>
				<value>/loginCert.do</value>
				<value>/logout.do</value>
				<value>/attachment/upload</value>
				<value>/log/help</value>
				<value>/log/appLog</value>
				<value>/getLogFile</value>
				<value>/taskCount.do</value>
				<value>/taskList.do</value>
				<value>/OAIndex.do</value>
			</list>
		</property>
		<property name="noNeedSaveLogUrls">
			<list>
				<value>/index/getUnReadMsg</value>
				<value>/log/help</value>
				<value>/log/appLog</value>
				<value>/index/indexPart</value>
				<value>/index/currentTask</value>
				<value>/index/xqtx</value>
				<value>/index/ghtx</value>
				<value>/attachment/IoReadImage/{id}</value>
				<value>/attachment/IoQrCodeImg/{fileName}</value>
			</list>
		</property>
	</bean>
	<!-- websocket处理类 -->
	<bean id="myHandler" class="com.gwideal.common.webSocket.MyWebSocketHandler" />
	<!-- 握手接口/拦截器 -->
	<bean id="myInterceptor" class="com.gwideal.common.webSocket.HandshakeInterceptor" />
	<websocket:handlers>
		<websocket:mapping path="/socket" handler="myHandler" />
		<websocket:handshake-interceptors>
			<ref bean="myInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>

	<!-- 注册 sockJS -->
	<websocket:handlers>
		<websocket:mapping path="/socket" handler="myHandler" />
		<websocket:handshake-interceptors>
			<ref bean="myInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>

	<!-- 定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 异常解析器 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">500</prop>
				<prop key="java.lang.Throwable">500</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/error">500</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="500"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	<context:component-scan base-package="com.gwideal" />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<!--<property name="maxUploadSize" value="200000"/> -->
	</bean>
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>classpath:/freeMarker</value>
		</property>
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
	</bean>

<!-- 定义触发器来管理任务Bean -->
<bean id="cronTriggerPunch" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	<property name="jobDetail">
	<!-- 使用嵌套Bean的方式来定义任务Bean -->
		<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<!-- 指定任务Bean的实现类 -->
			<property name="jobClass"  value="com.gwideal.common.quartz.OverDueTaskExecution"/>
			<property name="durability" value="true"></property>
		</bean>
	</property>
	<!-- 指定Cron表达式：每天凌晨1点执行调度0 0 1 * * ? * -->
	<property name="cronExpression"  value="0 0 1 * * ? *"/>
</bean>
<!-- 过期短信提醒 -->
<bean id="cronTriggerExpireMsg" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	<property name="jobDetail">
	<!-- 使用嵌套Bean的方式来定义任务Bean -->
		<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
			<!-- 指定任务Bean的实现类 -->
			<property name="jobClass"  value="com.gwideal.common.quartz.ExpireTaskExecution"/>
			<property name="durability" value="true"></property>
		</bean>
	</property>
	<!-- 指定Cron表达式：每天凌晨2点执行调度0 0 2 * * ? * -->
	<property name="cronExpression"  value="0 0 2 * * ? *"/>
</bean>
<!-- 执行实际的调度器-->
<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobFactory" ref="jobFactory"></property>
		<!-- 启动后延迟多久执行 -->
		<property name="startupDelay" value="5"></property>
   		<property name="triggers">
	        <list>
	            <ref bean="cronTriggerPunch"></ref>
	            <ref bean="cronTriggerExpireMsg"></ref>
	        </list>
    	</property>
</bean>
</beans>
