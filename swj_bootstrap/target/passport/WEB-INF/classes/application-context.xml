<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd"
	default-lazy-init="true">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		 <!-- 数据库基本信息配置 -->
         <property name="url" value="${jdbc.url}" />  
         <property name="username" value="${jdbc.username}" />  
         <property name="password" value="${jdbc.password}" />  
         <property name="driverClassName" value="${jdbc.driverClassName}" />  
         <property name="filters" value="${druid.filters}" />  
          <!-- 最大并发连接数 -->
         <property name="maxActive" value="${druid.maxActive}" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${druid.initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${druid.maxWait}" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="${druid.minIdle}" />  
         <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${druid.validationQuery}" />  
         <property name="testWhileIdle" value="${druid.testWhileIdle}" />  
         <property name="testOnBorrow" value="${druid.testOnBorrow}" />  
         <property name="testOnReturn" value="${druid.testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}" />
         <!-- 打开 removeAbandoned 功能 -->
         <property name="removeAbandoned" value="${druid.removeAbandoned}" />
         <!-- 1800 秒，也就是 30 分钟 -->
         <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
         <!-- 关闭 abanded 连接时输出错误日志 -->   
         <property name="logAbandoned" value="${druid.logAbandoned}" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>	
		<property name="hibernateProperties">
			<value>
			hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
			hibernate.show_sql=false
			hibernate.format_sql=false
			hibernate.query.substitutions=true 1, false 0
			hibernate.jdbc.batch_size=20
			</value>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com/gwideal/core/model/</value>
				<value>com/gwideal/activiti/entity/</value>
        		<value>com/gwideal/sms/entity/</value>
        		<value>com/gwideal/cms/entity/</value>
        		<value>com/gwideal/attachment/entity/</value>
        		<value>com/gwideal/swj/*/entity/</value>
			</list>
		</property>
	</bean>
	
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
          <!-- 配置数据源,和系统使用同一个数据源 -->
          <property name="dataSource" ref="dataSource" />
          <property name="databaseSchemaUpdate" value="true" />
          <property name="jobExecutorActivate" value="false" />
          <!-- 统一的事务管理 -->
          <property name="transactionManager" ref="transactionManager" />
          <property name="activityFontName"  value="宋体" />
          <property name="labelFontName"  value="宋体" />
  	</bean>
  	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
      	<property name="processEngineConfiguration" ref="processEngineConfiguration" />
 	</bean>
 	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
  	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
  	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
  	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
  	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
  	
  	<!-- activiti listener bean -->
  	<bean id="assigneeListener" class="com.gwideal.activiti.listener.AssigneeListener">
  		<property name="sessionFactory" ref="sessionFactory" />
  	</bean>
  	<bean id="assigneeWithDepartListener" class="com.gwideal.activiti.listener.AssigneeWithDepartListener">
  		<property name="sessionFactory" ref="sessionFactory" />
  	</bean>
  	
  	<bean id="certificateInfoApplyReturnedListener" class="com.gwideal.activiti.listener.CertificateInfoApplyReturnedListener">
  		<property name="sessionFactory" ref="sessionFactory" />
  		<property name="runtimeService" ref="runtimeService" />
  	</bean>
  	
  	<bean id="certificateInfoApplyApprovedListener" class="com.gwideal.activiti.listener.CertificateInfoApplyApprovedListener">
  		<property name="sessionFactory" ref="sessionFactory" />
  		<property name="runtimeService" ref="runtimeService" />
  	</bean>
  	
  	<bean id="certificateInfoApplyArchivedListener" class="com.gwideal.activiti.listener.CertificateInfoApplyArchivedListener">
  		<property name="sessionFactory" ref="sessionFactory" />
  		<property name="runtimeService" ref="runtimeService" />
  	</bean>
	
  	<!-- transactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>	
	

</beans>  